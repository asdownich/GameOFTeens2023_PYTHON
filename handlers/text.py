from aiogram import Dispatcher, types
from keyboards import kb
import config

async def text_f(message: types.Message):
    msg = message.text # –æ—Ç—Ä–∏–º—É—î–º–æ —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    
    for tariff, data in config.tariff.items():
        if msg == tariff:
            if 'keyboard' in data:
                await message.answer(data['info'], reply_markup=data['keyboard'])
            else:
                await message.answer(data['info'])
        if msg in kb.internet:
            if 'internet' in data:
                if data['internet'] == msg:
                    d = data['info']
                    ans = f'{d}'
                    await message.answer(ans, reply_markup=data['keyboard'])
        if msg in kb.calls:
            if 'calls' in data:
                if data['calls'] == msg:
                    d = data['info']
                    ans = f'{d}'
                    await message.answer(ans, reply_markup=data['keyboard'])

    
    if msg == '‚åöÔ∏è“ê–∞–¥–∂–µ—Ç':
        await message.answer('–í–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø —Ç–∞—Ä–∏—Ñ—É:', reply_markup=kb.gadjet_kb)

    elif msg == 'üë®‚Äçüë©‚Äçüë¶–°–º–∞—Ä—Ç –°—ñ–º\'—è':
        await message.answer('–í–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø —Ç–∞—Ä–∏—Ñ—É:', reply_markup=kb.family_kb)

def text(dp: Dispatcher):
    dp.register_message_handler(content_types=["text"], callback=text_f)
